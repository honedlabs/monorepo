<?php

declare(strict_types=1);

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use App\Modules\Breadcrumb\BreadcrumbData;
use App\Modules\Breadcrumb\Breadcrumb;
use App\Actions\Models\{{ model }}\Index{{ model }};
use App\Actions\Models\{{ model }}\Create{{ model }};
use App\Actions\Models\{{ model }}\Store{{ model }};
use App\Actions\Models\{{ model }}\Show{{ model }};
use App\Actions\Models\{{ model }}\Edit{{ model }};
use App\Actions\Models\{{ model }}\Update{{ model }};
use App\Actions\Models\{{ model }}\Delete{{ model }};
use App\Actions\Models\{{ model }}\Destroy{{ model }};
use App\Http\Requests\{{ model }}s\StoreRequest;
use App\Http\Requests\{{ model }}s\UpdateRequest;

final class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(Index{{ model }} $action)
    {
        $this->authorize('index', {{ model }}::class);

        $crumbs = BreadcrumbData::make(
            Breadcrumb::make('#', '{{ model }}s'),
        );

        return $action->handle($crumbs);
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create(Create{{ model }} $action)
    {
        $this->authorize('create', {{ model }}::class);

        $base = route('{{ modelVariable }}s.index');
        $store = route('{{ modelVariable }}s.store');

        return $action->handle($base, $store);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeRequest }} $request, Store{{ model }} $action)
    {
        $this->authorize('create', {{ model }}::class);

        ${{ modelVariable }} = $action->handle($request);

        return to_route('{{ modelVariable }}s.show', ${{ modelVariable }});
    }

    /**
     * Display the specified resource.
     */
    public function show({{ model }} ${{ modelVariable }}, Show{{ model }} $action)
    {
        $this->authorize('show', ${{ modelVariable }});

        $crumbs = BreadcrumbData::make(
            Breadcrumb::make(route('{{ modelVariable }}s.index'), '{{ model }}s'),
            Breadcrumb::make('#', 'View'),
        );

        return $action->handle(${{ modelVariable }}, $crumbs);
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ model }} ${{ modelVariable }}, Edit{{ model }} $action)
    {
        $this->authorize('update', ${{ modelVariable }});

        $crumbs = BreadcrumbData::make(
            Breadcrumb::make(route('{{ modelVariable }}s.index'), '{{ model }}s'),
            Breadcrumb::make(route('{{ modelVariable }}s.show', ${{ modelVariable }}), '{{ model }}'),
            Breadcrumb::make('#', 'Edit'),
        );

        $update = route('{{ modelVariable }}s.update', ${{ modelVariable }});

        return $action->handle(${{ modelVariable }}, $crumbs, $update);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }}, Update{{ model }} $action)
    {
        $this->authorize('update', ${{ modelVariable }});

        $action->handle($request, ${{ modelVariable }});

        return to_route('{{ modelVariable }}s.show', ${{ modelVariable }});
    }

    /**
     * Show the modal for confirming the model deletion.
     */
    public function delete({{ model }} ${{ modelVariable }}, Delete{{ model }} $action)
    {
        $this->authorize('delete', ${{ modelVariable }});

        $base = route('{{ modelVariable }}s.index');
        $destroy = route('{{ modelVariable }}s.destroy', ${{ modelVariable }});
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model }} ${{ modelVariable }}, Destroy{{ model }} $action)
    {
        $this->authorize('delete', ${{ modelVariable }});

        $action->handle(${{ modelVariable }});

        return to_route('{{ modelVariable }}s.index');
    }
}
